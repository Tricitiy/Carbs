-- SERVICES 
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- UI SETUP
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 200, 0, 240)  -- Reduced size
mainFrame.Position = UDim2.new(0.05, 0, 0.3, 0)  -- Slightly adjusted position
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BorderSizePixel = 5
mainFrame.Visible = true

local minimizeButton = Instance.new("TextButton", gui)
minimizeButton.Size = UDim2.new(0, 100, 0, 30)
minimizeButton.Position = UDim2.new(0.05, 0, 0.28, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
minimizeButton.TextColor3 = Color3.new(1,1,1)
minimizeButton.Text = "Open Menu"
minimizeButton.Visible = false

-- Open/Close GUI
UserInputService.InputBegan:Connect(function(input, processed)
    if input.KeyCode == Enum.KeyCode.RightShift and not processed then
        mainFrame.Visible = not mainFrame.Visible
        minimizeButton.Visible = not mainFrame.Visible
    end
end)

-- AUTO PARRY BUTTON
local autoParry = false
local parryButton = Instance.new("TextButton", mainFrame)
parryButton.Size = UDim2.new(0, 170, 0, 40)  -- Reduced size
parryButton.Position = UDim2.new(0, 15, 0, 20)  -- Adjusted position
parryButton.Text = "Auto-Parry: OFF"
parryButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
parryButton.TextColor3 = Color3.new(1,1,1)

parryButton.MouseButton1Click:Connect(function()
    autoParry = not autoParry
    parryButton.Text = "Auto-Parry: " .. (autoParry and "ON" or "OFF")
end)

-- Made By Tricitiy label (placed below the Auto Parry button)
local madeByLabel = Instance.new("TextLabel", mainFrame)
madeByLabel.Size = UDim2.new(0, 170, 0, 20)
madeByLabel.Position = UDim2.new(0, 15, 0, 70)  -- Positioned below the Auto Parry button
madeByLabel.Text = "Made by Tricitiy"
madeByLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
madeByLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
madeByLabel.TextSize = 12
madeByLabel.TextXAlignment = Enum.TextXAlignment.Center
madeByLabel.TextYAlignment = Enum.TextYAlignment.Center

-- AUTO PARRY LOGIC
local line = nil
RunService.RenderStepped:Connect(function()
    character = player.Character
    if not character then return end
    local root = character:FindFirstChild("HumanoidRootPart")
    if not root then return end

    -- Auto Parry logic
    if autoParry then
        local ballTargeting = false
        for _, ball in ipairs(workspace:GetDescendants()) do
            if ball:IsA("Part") and ball.Name:lower():find("ball") then
                local distance = (root.Position - ball.Position).Magnitude
                if distance <= 20 then  -- Adjust distance as needed
                    ballTargeting = true
                    
                    -- Create or update the line between the torso and the ball
                    if not line then
                        line = Instance.new("Part", workspace)
                        line.Size = Vector3.new(0.1, 0.1, distance)
                        line.Anchored = true
                        line.CanCollide = false
                        line.Color = Color3.fromRGB(0, 255, 0)
                    else
                        line.Size = Vector3.new(0.1, 0.1, distance)
                    end
                    line.CFrame = CFrame.new(root.Position, ball.Position) * CFrame.new(0, 0, -(distance / 2)) -- Positioning the line

                    -- Simulate parry press
                    local VirtualInputManager = game:GetService("VirtualInputManager")
                    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, game)
                    task.wait(0.05)
                    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.F, false, game)

                    break
                end
            end
        end

        -- If no ball is targeting, remove the line
        if not ballTargeting and line then
            line:Destroy()
            line = nil
        end
    end
end)
