-- SERVICES 
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- UI SETUP
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 250, 0, 300)
mainFrame.Position = UDim2.new(0.05, 0, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BorderSizePixel = 5
mainFrame.Visible = true

local minimizeButton = Instance.new("TextButton", gui)
minimizeButton.Size = UDim2.new(0, 100, 0, 30)
minimizeButton.Position = UDim2.new(0.05, 0, 0.28, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
minimizeButton.TextColor3 = Color3.new(1,1,1)
minimizeButton.Text = "Open Menu"
minimizeButton.Visible = false

local closeButton = Instance.new("TextButton", gui)
closeButton.Size = UDim2.new(0, 100, 0, 30)
closeButton.Position = UDim2.new(0.8, 0, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
closeButton.TextColor3 = Color3.new(1,1,1)
closeButton.Text = "Close"

-- Open/Close GUI
UserInputService.InputBegan:Connect(function(input, processed)
    if input.KeyCode == Enum.KeyCode.RightShift and not processed then
        mainFrame.Visible = not mainFrame.Visible
        minimizeButton.Visible = not mainFrame.Visible
    end
end)

closeButton.MouseButton1Click:Connect(function()
    gui:Destroy() -- Close the GUI completely
end)

-- AUTO PARRY BUTTON
local autoParry = false
local parryButton = Instance.new("TextButton", mainFrame)
parryButton.Size = UDim2.new(0, 200, 0, 50)
parryButton.Position = UDim2.new(0, 25, 0, 20)
parryButton.Text = "Auto-Parry: OFF"
parryButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
parryButton.TextColor3 = Color3.new(1,1,1)

parryButton.MouseButton1Click:Connect(function()
    autoParry = not autoParry
    parryButton.Text = "Auto-Parry: " .. (autoParry and "ON" or "OFF")
end)

-- WALKSPEED BOX
local speedBox = Instance.new("TextBox", mainFrame)
speedBox.Size = UDim2.new(0, 200, 0, 40)
speedBox.Position = UDim2.new(0, 25, 0, 90)
speedBox.PlaceholderText = "WalkSpeed (Default 16)"
speedBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
speedBox.TextColor3 = Color3.new(1,1,1)

speedBox.FocusLost:Connect(function()
    local num = tonumber(speedBox.Text)
    if num then
        humanoid.WalkSpeed = num
    end
end)

-- FLY SYSTEM
local flying = false
local flySpeed = 50
local flyButton = Instance.new("TextButton", mainFrame)
flyButton.Size = UDim2.new(0, 200, 0, 50)
flyButton.Position = UDim2.new(0, 25, 0, 150)
flyButton.Text = "Fly: OFF"
flyButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
flyButton.TextColor3 = Color3.new(1,1,1)

flyButton.MouseButton1Click:Connect(function()
    flying = not flying
    flyButton.Text = "Fly: " .. (flying and "ON" or "OFF")
end)

local flySpeedBox = Instance.new("TextBox", mainFrame)
flySpeedBox.Size = UDim2.new(0, 200, 0, 40)
flySpeedBox.Position = UDim2.new(0, 25, 0, 220)
flySpeedBox.PlaceholderText = "Fly Speed (Default 50)"
flySpeedBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
flySpeedBox.TextColor3 = Color3.new(1,1,1)

flySpeedBox.FocusLost:Connect(function()
    local num = tonumber(flySpeedBox.Text)
    if num then
        flySpeed = num
    end
end)

-- ACTUAL FLY AND AUTO PARRY
RunService.RenderStepped:Connect(function()
    character = player.Character
    if not character then return end
    local root = character:FindFirstChild("HumanoidRootPart")
    if not root then return end

    -- Fly logic
    if flying then
        local moveVec = Vector3.new()
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveVec = moveVec + workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveVec = moveVec - workspace.CurrentCamera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveVec = moveVec - workspace.CurrentCamera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveVec = moveVec + workspace.CurrentCamera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            moveVec = moveVec + workspace.CurrentCamera.CFrame.UpVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
            moveVec = moveVec - workspace.CurrentCamera.CFrame.UpVector
        end
        root.Velocity = moveVec.Unit * flySpeed
    end

    -- Auto Parry logic (distance set to 20)
    if autoParry then
        for _, ball in ipairs(workspace:GetDescendants()) do
            if ball:IsA("Part") and ball.Name:lower():find("ball") then
                local distance = (root.Position - ball.Position).Magnitude
                if distance <= 20 then
                    -- Simulate press F (use VirtualInputManager)
                    local VirtualInputManager = game:GetService("VirtualInputManager")
                    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, game)
                    task.wait(0.05)
                    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.F, false, game)
                    break
                end
            end
        end
    end
end)
