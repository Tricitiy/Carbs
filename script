-- SERVICESÂ 
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- UI SETUP
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 180, 0, 140)
mainFrame.Position = UDim2.new(0.05, 0, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BorderSizePixel = 5
mainFrame.Visible = true
mainFrame.Parent = gui

local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 100, 0, 30)
minimizeButton.Position = UDim2.new(0.05, 0, 0.28, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
minimizeButton.TextColor3 = Color3.new(1,1,1)
minimizeButton.Text = "Open Menu"
minimizeButton.Visible = false
minimizeButton.Parent = gui

-- Open/Close GUI
UserInputService.InputBegan:Connect(function(input, processed)
	if input.KeyCode == Enum.KeyCode.RightShift and not processed then
		mainFrame.Visible = not mainFrame.Visible
		minimizeButton.Visible = not mainFrame.Visible
	end
end)

minimizeButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = true
	minimizeButton.Visible = false
end)

-- AUTO PARRY BUTTON
local autoParry = false
local parryButton = Instance.new("TextButton", mainFrame)
parryButton.Size = UDim2.new(0, 150, 0, 40)
parryButton.Position = UDim2.new(0, 15, 0, 20)
parryButton.Text = "Auto-Parry: OFF"
parryButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
parryButton.TextColor3 = Color3.new(1,1,1)

parryButton.MouseButton1Click:Connect(function()
	autoParry = not autoParry
	parryButton.Text = "Auto-Parry: " .. (autoParry and "ON" or "OFF")
end)

-- Made By Tricitiy label
local madeByLabel = Instance.new("TextLabel", mainFrame)
madeByLabel.Size = UDim2.new(0, 150, 0, 20)
madeByLabel.Position = UDim2.new(0, 15, 0, 70)
madeByLabel.Text = "Made by Tricitiy"
madeByLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
madeByLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
madeByLabel.TextSize = 12
madeByLabel.TextXAlignment = Enum.TextXAlignment.Center
madeByLabel.TextYAlignment = Enum.TextYAlignment.Center

-- AUTO PARRY + GREEN LINE
local currentDistances = {}
local beams = {}

RunService.RenderStepped:Connect(function()
	character = player.Character
	if not character then return end
	local root = character:FindFirstChild("HumanoidRootPart")
	if not root then return end

	for _, ball in ipairs(workspace:GetDescendants()) do
		if ball:IsA("Part") and ball.Name:lower():find("ball") then
			local distance = (root.Position - ball.Position).Magnitude

			-- Draw or update beam
			if not beams[ball] then
				local beam = Instance.new("Beam")
				local a0 = Instance.new("Attachment", root)
				local a1 = Instance.new("Attachment", ball)
				beam.Attachment0 = a0
				beam.Attachment1 = a1
				beam.Width0 = 0.1
				beam.Width1 = 0.1
				beam.Color = ColorSequence.new(Color3.fromRGB(0, 255, 0))
				beam.FaceCamera = true
				beam.Parent = ball
				beams[ball] = {beam = beam, a0 = a0, a1 = a1}
			else
				local data = beams[ball]
				data.a0.WorldPosition = root.Position
				data.a1.WorldPosition = ball.Position
			end

			-- Smart Auto-Parry
			if autoParry then
				local last = currentDistances[ball] or distance
				if distance < last - 0.2 then
					VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, game)
					task.wait(0.05)
					VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.F, false, game)
					break
				end
				currentDistances[ball] = distance
			end
		end
	end
end)
