local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BallTargetGUI"
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 50)
frame.Position = UDim2.new(0.5, -100, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, 0, 1, 0)
label.BackgroundTransparency = 1
label.TextColor3 = Color3.new(1, 1, 1)
label.TextScaled = true
label.Text = "Checking..."
label.Font = Enum.Font.SourceSans
label.Parent = frame

-- Function to check if the ball is targeting the player
local function isBallTargetingPlayer(ball)
	if not root or not ball.Velocity then return false end
	local directionToPlayer = (root.Position - ball.Position).Unit
	local ballDirection = ball.Velocity.Magnitude > 0 and ball.Velocity.Unit or Vector3.zero
	local dot = directionToPlayer:Dot(ballDirection)
	return dot > 0.95
end

-- Main loop
RunService.RenderStepped:Connect(function()
	character = player.Character
	root = character and character:FindFirstChild("HumanoidRootPart")
	if not root then return end

	local isTargeting = false

	for _, ball in ipairs(workspace:GetDescendants()) do
		if ball:IsA("BasePart") and ball.Name:lower():find("ball") then
			if isBallTargetingPlayer(ball) then
				isTargeting = true
				break
			end
		end
	end

	if isTargeting then
		label.Text = "The ball is targeting you"
	else
		label.Text = "The ball is not targeting you"
	end
end)
